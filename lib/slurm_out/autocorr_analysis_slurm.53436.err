Traceback (most recent call last):
  File "/home/egad/VAN_ising/lib/autocorr_analysis_script.py", line 38, in <module>
    mcmc_results = analyzer.run_nmcmc(initial_config, n_steps)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/VAN_ising/lib/nmcmc_analyzer.py", line 75, in run_nmcmc
    proposal_log_prob = self.van_model.log_prob(proposal)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/VAN_ising/lib/VAN.py", line 84, in log_prob
    x_hat = self.forward(sample)
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/VAN_ising/lib/VAN.py", line 51, in forward
    return self.net(x);
           ^^^^^^^^^^^
  File "/home/egad/.conda/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/.conda/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/.conda/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/egad/.conda/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/.conda/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/egad/VAN_ising/lib/pixelcnn.py", line 34, in forward
    return nn.functional.conv2d(x, self.mask * self.weight, self.bias,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 23.68 GiB of which 13.75 MiB is free. Including non-PyTorch memory, this process has 23.66 GiB memory in use. Of the allocated memory 22.64 GiB is allocated by PyTorch, and 800.15 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
